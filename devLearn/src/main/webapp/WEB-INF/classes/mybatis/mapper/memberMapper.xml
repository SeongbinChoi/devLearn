<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	
	<!-- 로그인 -->
	<select id="loginMember" parameterType="String" resultType="com.sp.dev.member.Member">
		SELECT m.memberEmail, memberName, memberNickname, memberPwd, memberRole, pwdFail, enabled, 
	    	infoUpdate, lastLogin
	    FROM member m
    WHERE m.memberEmail = #{memberEmail}
	</select>
	
	
	<!-- 로그인 성공 시 변경사항 업데이트 (pwdFail 0으로, lastLogin을 현재날짜)-->
	<update id="updateMemberState" parameterType="String">
		UPDATE member SET pwdFail = 0, lastLogin = SYSDATE
		 WHERE memberEmail = #{memberEmail}
	</update>
	
	<!-- 로그인 실패 시 비밀번호 틀린횟수 증가 -->
	<update id="updatePwdFail" parameterType="String">
		UPDATE member SET pwdFail = pwdFail + 1 WHERE memberEmail = #{memberEmail}
	</update>
	
	<!-- 비밀번호 틀린횟수 5회 누적 시, 1년 이상 미접속 -> 계정 비활성화 -->
	<update id="updateEnabled" parameterType="String">
		UPDATE member SET enabled = 99 WHERE memberEmail = #{memberEmail}
	</update>
	
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="com.sp.dev.member.Member">
		INSERT INTO member(memberEmail, memberPwd, memberName, memberNickname, memberRole, pwdFail, 
			regDate, emailCheck, enabled, infoUpdate, lastLogin)
    	VALUES(#{memberEmail}, #{memberPwd}, #{memberName}, #{memberName}, 1, #{pwdFail , jdbcType=INTEGER}, SYSDATE, #{emailCheck},
    		1, #{infoUpdate, jdbcType=DATE}, SYSDATE)
	</insert>
	
	
	<!-- 이메일 읽어오기 -->
	<select id="readMember" parameterType="String" resultType="com.sp.dev.member.Member">
		SELECT memberEmail, memberPwd, memberName, memberNickname, memberRole, NVL(pwdFail, 0) pwdFail, 
			regDate, emailCheck, enabled, NVL(infoUpdate, NULL) infoUpdate, NVL(lastLogin, NULL) lastLogin
			FROM member
			WHERE memberEmail = #{memberEmail}
	</select>
	
	<!-- 이메일 중복확인 -->
	<select id="readMemberCount" parameterType="String" resultType="Integer">
		SELECT COUNT(*) FROM member WHERE memberEmail = #{email}
	</select>
	
	
	<!-- 임시 비밀번호로 회원비번 수정 -->
	<update id="updateMemberPwd">
		UPDATE member SET memberPwd = #{memberPwd}
			WHERE memberEmail = #{memberEmail}
	</update>
	
	
	<!-- 회원정보수정 -->
	<update id="updateMember" parameterType="com.sp.dev.member.Member">
		UPDATE member SET memberName = #{memberName}, 
			memberPwd = #{memberPwd}, infoUpdate = SYSDATE
		WHERE memberEmail = #{memberEmail}
	</update>
	
	
</mapper>