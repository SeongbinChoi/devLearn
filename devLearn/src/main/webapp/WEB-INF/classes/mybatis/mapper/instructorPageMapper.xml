<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="instructorPage">
	
	<insert id="insertLecture" parameterType="com.sp.dev.instrutorPage.Lectures">
		INSERT INTO lecture(lectureNum, memberEmail, categoryCode, lectureSubject, 
			lectureContent, lecturePrice, regDate, dcPercent, 
			lectureDuration, thumbNail, lectureState, lectureSummary)
		VALUES(#{lectureNum}, #{memberEmail}, #{categoryCode}, #{lectureSubject},
			#{lectureContent}, #{lecturePrice}, SYSDATE, #{dcPercent}, 
			#{lectureDuration}, #{thumbNail}, 0, #{lectureSummary})
	</insert>
	
	<update id="updateLecture" parameterType="com.sp.dev.instrutorPage.Lectures">
		UPDATE lecture SET categoryCode= #{categoryCode}, lectureSubject = #{lectureSubject}, 
			lectureContent = #{lectureContent}, lecturePrice = #{lecturePrice},
			dcPercent = #{dcPercent}, lectureDuration = #{lectureDuration}, thumbNail = {thumbNail}
		WHERE memberEmail = #{memberEmail}
	</update>
	
	<select id="readLecture" parameterType="String" resultType="com.sp.dev.instrutorPage.Lectures">
		SELECT lectureNum, lectureEmail, categoryCode, lectureSubject, 
			lectureContent, lecturePrice, reg_date, dcPercent, lectureState,
			lectureDuration, thumbNail
		FROM lecture
		WHERE memberEmail = #{memberEmail}
	</select>
	
	<select id="listCategory" resultType="com.sp.dev.instrutorPage.Lectures">
		SELECT categoryCode, categoryName  FROM category
		WHERE mainCategory IS NULL
	</select>
	
	<select id="listSubCategory" parameterType="String" resultType="com.sp.dev.instrutorPage.Lectures">
		SELECT categoryCode, mainCategory, categoryName  FROM category
		WHERE mainCategory = #{categoryCode}
	</select>
	
	<select id="videoSeq" resultType="Integer">
		SELECT lectureVideoFile_seq.NEXTVAL FROM dual
	</select>
	<insert id="insertVideo" parameterType="com.sp.dev.instrutorPage.Lectures">
		INSERT INTO lectureVideoFile(lectureNum, videoNum, fileTotalTime, videoTitle, chapter, 
			videoFileName)
		VALUES(#{lectureNum}, #{videoNum}, #{fileTotalTime}, #{videoTitle}, #{chapter},
			#{videoFileName})
	</insert>

	<select id="readVideo" parameterType="Integer" resultType="com.sp.dev.instrutorPage.Lectures" >
		SELECT lectureNum, videoNum, fileTotalTime, videoTitle, chapter, videoFileName
		FROM lectureVideoFile
		WHERE videoNum = #{videoNum}
	</select>
	
	<select id="readLecture2" parameterType="String" resultType="com.sp.dev.instrutorPage.Lectures">
		SELECT lectureNum, memberEmail, categoryCode, lectureSubject, 
			lectureContent, lecturePrice, reg_date, dcPercent, lectureState,
			lectureDuration, thumbNail
		FROM lecture
		WHERE lectureNum = #{lectureNum}
	</select>
	
	<select id="readVideo2" parameterType="Integer" resultType="com.sp.dev.instrutorPage.Lectures" >
		SELECT lectureNum, videoNum, fileTotalTime, videoTitle, chapter, videoFileName
		FROM lectureVideoFile
		WHERE lectureNum = #{lectureNum}
	</select>
	
	<delete id="deleteLecture" parameterType="map">
		DELETE from lecture WHERE lectureNum = #{lectureNum}
	</delete>
	
	<delete id="deleteLectureVideo" parameterType="map">
		DELETE from lectureVideoFile WHERE lectureNum = #{lectureNum}
	</delete>
	
	<delete id="deleteVideo" parameterType="map">
		DELETE from lectureVideoFile WHERE videoNum = #{videoNum}
	</delete>
	
	<select id="seq" resultType="Integer">
		SELECT lecture_seq.NEXTVAL FROM dual
	</select>
	
	<select id="listLecture" parameterType="java.util.Map" resultType="com.sp.dev.instrutorPage.Lectures">
		SELECT * FROM(
		    SELECT ROWNUM rnum, tb.* FROM(
		        SELECT lectureNum, memberEmail, lectureSubject, lecturePrice, TO_CHAR(regDate,'YYYY-MM-DD') lectureRegDate, dcPercent , 
		            lectureDuration ,lectureContent , lectureState state, thumbNail
		        FROM lecture 
		        <where>
					memberEmail=#{memberEmail}
				</where>
				ORDER BY regDate DESC
		    ) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	
	<select id="countLecture" parameterType="java.util.Map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) 
		FROM LECTURE
		<where>
			memberEmail=#{memberEmail}
		</where>
	</select>
	
	<select id="listInquiry" parameterType="map" resultType="com.sp.dev.instrutorPage.Lectures">
		SELECT * FROM (
					SELECT ROWNUM rnum, tb.* FROM (
						SELECT inquiryNum, i.lectureNum,qMember,
							question, q_regDate, answer,a_regDate
						FROM lectureInquiry i
						JOIN lecture l ON i.lectureNum=l.lectureNum 
						<where>
							l.memberEmail=#{memberEmail}
						</where>
						ORDER BY q_regDate DESC
					) tb WHERE ROWNUM &lt;= #{end}
				) WHERE rnum &gt;= #{start}
	</select>

	<select id="countInquiry" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) 
		FROM lectureInquiry i
		JOIN lecture l ON i.lectureNum=l.lectureNum
		<where>
			l.memberEmail=#{memberEmail}
		</where>
	</select>
	
	
</mapper>